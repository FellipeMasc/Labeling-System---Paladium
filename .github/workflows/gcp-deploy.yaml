on:
  workflow_call:
    inputs:
      APP_NAME:
        description: "App name configured"
        required: true
        type: string
      DOCKERFILE:
        description: "Custom Dockerfile"
        required: false
        default: "front/Dockerfile"
        type: string
      PRD_BRANCH:
        description: "Production branch"
        required: false
        default: "master"
        type: string

jobs:
  get-env:
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.env-checker.outputs.output-env-name}}
      app-name: ${{ steps.env-checker.outputs.output-app-name}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check env
        id: env-checker
        shell: bash
        env:
          PRD_branch: ${{ inputs.PRD_branch }}
        run: |
          BASE_REF="${GITHUB_REF_NAME:-${{ github.ref_name }}}"
          APP_NAME="${{ inputs.APP_NAME }}"
          ENV_NAME="prd"

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE_REF="${{ github.event.pull_request.base.ref }}"
          fi

          echo "BASE_REF is ${BASE_REF}"
          echo "env is ${ENV_NAME}"
          echo "output-env-name=${ENV_NAME}" >> $GITHUB_OUTPUT
          echo "output-app-name=${APP_NAME}" >> $GITHUB_OUTPUT

  build-and-push:
    needs: get-env
    runs-on: ubuntu-latest
    environment: "prd"
    env:
      IMAGE_NAME: southamerica-east1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY_ID }}/${{ needs.get-env.outputs.app-name }}:latest
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      AI_API_URL: ${{ secrets.AI_API_URL }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      NODE_ENV: ${{ secrets.NODE_ENV }}
      BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
      NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Google Cloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Build the Docker image
        run: |
          echo "env novo"
          echo "NODE_ENV: $NODE_ENV"
          echo "NEXT_PUBLIC_APP_URL: $NEXT_PUBLIC_APP_URL"
          echo "RESEND_API_KEY: $RESEND_API_KEY"
          docker build \
            --build-arg DATABASE_URL="$DATABASE_URL" \
            --build-arg AI_API_URL="$AI_API_URL" \
            --build-arg AWS_REGION="$AWS_REGION" \
            --build-arg AWS_BUCKET_NAME="$AWS_BUCKET_NAME" \
            --build-arg AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" \
            --build-arg AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" \
            --build-arg NODE_ENV="$NODE_ENV" \
            --build-arg BETTER_AUTH_SECRET="$BETTER_AUTH_SECRET" \
            --build-arg BETTER_AUTH_SECRET="$BETTER_AUTH_SECRET" \
            --build-arg NEXT_PUBLIC_URL="$NEXT_PUBLIC_URL" \
            --file ${{ inputs.DOCKERFILE }} \
            --progress=plain \
            --tag $IMAGE_NAME \
            .

      - name: Push Docker image to Google Artifact Registry
        run: |
          gcloud auth configure-docker southamerica-east1-docker.pkg.dev     
          docker push $IMAGE_NAME

  deploy-image:
    needs: [get-env, build-and-push]
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: southamerica-east1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY_ID }}/${{ needs.get-env.outputs.app-name }}:latest
      APP_NAME: ${{ needs.get-env.outputs.app-name }}
    environment: "prd"
    steps:
      - name: Set up Google Cloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Deploy to Google Cloud Run
        run: |
          echo "Deploying with environment:"
          echo "NODE_ENV: ${{ secrets.NODE_ENV }}"
          echo "NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}"

          gcloud run deploy $APP_NAME \
            --image $IMAGE_NAME \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated \
            --memory 1024Mi \
            --set-env-vars="NODE_ENV=${{ secrets.NODE_ENV }}" \
            --set-env-vars="DATABASE_URL=${{ secrets.DATABASE_URL }}" \
            --set-env-vars="AI_API_URL=${{ secrets.AI_API_URL }}" \
            --set-env-vars="AWS_REGION=${{ secrets.AWS_REGION }}" \
            --set-env-vars="AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" \
            --set-env-vars="AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            --set-env-vars="AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            --set-env-vars="BETTER_AUTH_SECRET=${{ secrets.BETTER_AUTH_SECRET }}" \
            --set-env-vars="NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }}" \
          gcloud run services update-traffic $APP_NAME \
          --region us-central1 \
          --to-latest
